/* pa.c */
Subgoal *PA_StartSubgoal(Context *cx, Ts *ts, Obj *actor, Subgoal *supergoal, int onsuccess, int onfailure, Obj *subgoal);
Bool PA_RunSubgoal(Context *cx, Subgoal *sg);
void DemonPrint(FILE *stream, Demon *d);
void DemonPrintAll(FILE *stream, Demon *d);
void DemonSet(Context *cx, Subgoal *sg, Ts *ts, int tostate, Obj *ptn, Dur waitidle);
void DemonClearAll(Context *cx, Subgoal *sg);
int DemonTsTest(Context *cx, Subgoal *sg, Bool *pending);
int DemonWaitidleTest(Context *cx, Subgoal *sg);
Bool DemonPtnTest(Context *cx, Subgoal *sg, Obj *assertion);
void DemonPtnTestAll(Context *cx, Obj *assertion);
Bool DemonStop(Context *cx, Subgoal *sg);
Subgoal *TG(Context *cx, Ts *ts, Obj *actor, Obj *goal);
Subgoal *SG(Context *cx, Subgoal *supergoal, int onsuccess, int onfailure, Obj *goal);
void ADDO(Ts *ts, Obj *rel, Obj *scriptprop, Obj *concrete, int always_assert);
Obj *FINDP(Context *cx, Ts *ts, Obj *rel, Obj *scriptprop, Obj *abstract_part, Obj *whole);
Obj *FINDO(Context *cx, Ts *ts, Obj *rel, Obj *scriptprop, Obj *findnearest, Obj *nearx, Obj *owner);
Obj *GETO(Ts *ts, Obj *rel, Obj *scriptprop);
Obj *GETOO(Ts *ts, Obj *rel, Obj *scriptprop);
void TOSTATE(Context *cx, Subgoal *sg, SubgoalState state);
void WAIT_TS(Context *cx, Subgoal *sg, Ts *ts, Dur dur, int tostate);
Bool WAIT_PTN(Context *cx, Subgoal *sg, int immed_check, int tostate, Obj *ptn);
void WAIT_IDLE(Context *cx, Subgoal *sg, Ts *ts, Dur waitidle, int tostate);
void PA_MainLoop(Context *cx, int mode);
void Daydream(void);
Bool PA_SubgoalIneligible(Context *cx, Subgoal *sg, Ts *now, int *depends_on_now);
Bool PA_SpinIsFinished(Context *cx, Subgoal *sg);
Bool PA_Pass(Context *cx);
void PA_SpinTo(Context *cx, Subgoal *sg, int spin_to_state);
void PA_SpinToGoalStatus(Context *cx, Subgoal *sg, Obj *goal_status, Obj *spin_emotion);
void PA_ObjStateChange(TsRange *tsrange, Obj *part, int depth);
Bool PAObj_IsBroken(Ts *ts, Obj *obj);
Obj *PAObj_GetState(Ts *ts, Obj *obj, Obj *state);
Obj *PAObj_GetPartState(Ts *ts, Obj *obj, Obj *part, Obj *state);
