/* utilrpt.c */
RptField *RptFieldCreate(char *s, int just);
RptField *RptFieldAppend(char *s, int just, RptField *orig_rf);
RptLine *RptLineCreate(RptField *fields, RptLine *next);
Rpt *RptCreate(void);
void RptFieldFree(RptField *rf);
void RptLineFree(RptLine *rl);
void RptFree(Rpt *r);
int RptLineLen(RptLine *rl);
void RptStartLine(Rpt *r);
void RptAdd(Rpt *r, char *s, int just);
void RptAddTs(Rpt *rpt, Ts *ts, Discourse *dc);
void RptAddConcept(Rpt *rpt, Obj *obj, Discourse *dc);
void RptAddList(Rpt *rpt, ObjList *objs, int justif, Discourse *dc);
void RptAddFeatAbbrev(Rpt *rpt, int feature, int force, Discourse *dc);
void RptAddFeaturesAbbrev(Rpt *rpt, char *features, int force, char *except, Discourse *dc);
void RptAddInt(Rpt *rpt, int i, Discourse *dc);
void RptAddLong(Rpt *rpt, long i, Discourse *dc);
void RptAddFloat(Rpt *rpt, Float x, Discourse *dc);
RptLine **RptLineToArray(RptLine *rl, size_t *num, size_t *size);
void RptLineArrayToList(RptLine **arr, size_t num);
int RptSortFn(const void *rl1, const void *rl2);
void RptLineSort1(RptLine **arr, size_t num, size_t size, int sort_by, int sort_sign);
RptLine *RptLineSort(RptLine *rl, int numfields, int sort_by, int sort_sign);
void RptSort(Rpt *r, int sort_by, int sort_sign);
void RptTextPrint1(Text *text, char *s, int fieldlen, int just);
void RptTextPrintLine(Text *text, Rpt *r, RptLine *rl, int maxfieldlen, int sep);
void RptTextPrint(Text *text, Rpt *r, int show_header, int sort_by, int sort_sign, int maxfieldlen);
int RptLines(Rpt *r);
