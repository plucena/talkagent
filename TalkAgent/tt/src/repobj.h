/* repobj.c */
void ObjInit(void);
Obj *ObjCreateRawNonlist(void);
Obj *ObjCreateRawList(int force_malloc);
void ObjFindUnusedName(Obj *parent, char *prefix, char *name, int *is_le0);
Obj *ObjCreateInstanceText(Obj *parent, char *text, int existing_ok, int create_flag, int *is_le0, int *existing);
Obj *ObjCreateInstanceNamed(Obj *parent, char *name, int create_flag);
Obj *ObjCreateInstance(Obj *parent, char *prefix);
Obj *ObjCreateList(Obj *elem0, ...);
Obj *ObjCreateList1(Obj **elems, int len);
PNode *PNodeCheck(PNode *pn);
Obj *ObjCreateListPNode1(Obj **elems, PNode **pn_elems, int len);
int ObjCreateFlagToDbFileChar(int create_flag);
int ObjCreateFlag(Obj *obj);
Obj *NameToObj(char *name, int flag);
Obj *StringToObj(char *s, Obj *parent, int use_string_as_name);
Obj *NumberToObj(Float number);
Obj *NumberToObjClass(Float number, Obj *parent);
Obj *GridSubspaceToObj(GridSubspace *gr);
Obj *TripLegToObj(TripLeg *gr);
Obj *TsRangeToObj(TsRange *tsr);
Obj *HumanNameToObj(Name *nm);
Obj *ObjAtGridCreate(Obj *obj, Obj *grid, GridCoord row, GridCoord col);
Obj *ObjCopyList(Obj *old);
Obj *ObjCopyListWithSubst(Obj *old, Obj *from, Obj *to);
Obj *ObjGridCopy(Obj *old, char *name);
Obj *ObjGridSubspaceCopy(Obj *old_obj);
void ObjFree(Obj *obj);
char *ObjToName(Obj *obj);
char *ObjToString(Obj *obj);
Obj *ObjToStringClass(Obj *obj);
Float ObjToNumber(Obj *obj);
Dur ObjToDur(Obj *obj, Dur def);
Obj *ObjToNumberClass(Obj *obj);
Grid *ObjToGrid(Obj *obj);
GridSubspace *ObjToGridSubspace(Obj *obj);
TripLeg *ObjToTripLeg(Obj *obj);
TsRange *ObjToTsRange(Obj *obj);
Name *ObjToHumanName(Obj *obj);
ObjList *ObjToJustification(Obj *obj);
ObjList *ObjToSuperseded(Obj *obj);
Bool ObjSupersededIn(Obj *obj, Context *cx);
Bool ObjIsOK1(Obj *obj);
Bool ObjIsOK(Obj *obj);
Bool ObjIsOKDeep(Obj *obj);
int ook(Obj *obj);
int ObjNumParents(Obj *obj);
Obj *ObjIthParent(Obj *obj, int i);
int ObjNumChildren(Obj *obj);
Obj *ObjIthChild(Obj *obj, int i);
Bool ObjIsParent(Obj *parent, Obj *child);
Obj *ObjGetUniqueParent(Obj *obj);
Obj *ObjGetUniqueParent1(Obj *obj);
Obj *ObjGetAParent(Obj *obj);
Bool ObjHasCommonParent(Obj *obj1, Obj *obj2);
Obj *ObjIth(Obj *obj, int i);
PNode *ObjIthPNode(Obj *obj, int i);
Bool ObjIsForLexEntry(Obj *obj, LexEntry *le);
void ObjMakeConcrete(Obj *obj);
void ObjMakeAbstract(Obj *obj);
void ObjTsRangeSetFrom(Obj *obj1, Obj *obj2);
Obj *ObjPastify(Obj *obj, Discourse *dc);
void ObjSetTsRange(Obj *obj, TsRange *tsr);
void ObjSetTsRangeContext(Obj *obj, Context *cx);
Obj *ObjTsAdd(Ts *ts, Obj *obj);
Obj *ObjTsStartStop(Ts *ts, Obj *obj);
Obj *ObjTsRangeAdd(TsRange *tsr, Obj *obj);
void ObjSetJustification(Obj *obj, ObjList *justification);
void ObjAppendJustification(Obj *obj, ObjList *justification);
void ObjAddParent(Obj *obj, Obj *parent);
void ObjAddChild(Obj *obj, Obj *child);
void ObjAddIsa1(Obj *obj, Obj *parent);
void ObjAddIsa(Obj *obj, Obj *parent);
Bool ObjReclassify(Obj *obj, Obj *fromparent, Obj *toparent);
Bool ObjSetIth(Obj *obj, int i, Obj *value);
Bool ObjSetIthPNode(Obj *obj, int i, PNode *value);
Bool ISA1(Obj *anc, Obj *des, int depth);
Bool ISA(Obj *anc, Obj *des);
Bool ISAP(Obj *class, Obj *obj);
Bool ISADeep(Obj *anc, Obj *obj);
Bool ObjBarrierISA(Obj *obj);
ObjList *ObjCommonAncestors1(Obj *obj1, Obj *obj2, int depth, int maxdepth, ObjList *r);
ObjList *ObjCommonAncestors(Obj *obj1, Obj *obj2);
ObjList *ObjDescendants1(Obj *obj, int type, int depth, int maxdepth, ObjList *r);
ObjList *ObjDescendants(Obj *obj, int type);
ObjList *ObjChildren(Obj *obj, int type);
ObjList *ObjAncestors1(Obj *obj, int type, int depth, int maxdepth, ObjList *r);
ObjList *ObjAncestors(Obj *obj, int type);
ObjList *ObjAncestorsOfDepth1(Obj *obj, int type, int desired_depth, int depth, int maxdepth, ObjList *r);
ObjList *ObjAncestorsOfDepth(Obj *obj, int type, int desired_depth);
ObjList *ObjParents(Obj *obj, int type);
long ObjNumDescendants(Obj *obj, int type);
ObjList *ObjCutClasses(ObjList *objs);
Bool ObjEqual(Obj *obj1, Obj *obj2);
Bool ObjSimilarList(Obj *obj1, Obj *obj2);
Bool ObjSimilarListNoTsRange(Obj *obj1, Obj *obj2);
ObjList *ObjAnalogize(Obj *src, Obj *tgt);
Bool ObjAnalogize1(Obj *src, Obj *tgt, /* OUTPUT */ ObjList **mapp);
Bool ObjIsSpecifPart(Obj *spec, Obj *gen);
Bool ObjIsSpecif(Obj *obj1, Obj *obj2);
Float ObjSimilarity(Obj *obj1, Obj *obj2);
Float ObjPathLengthSimilarity(Obj *obj1, Obj *obj2);
int ObjFindInList(Obj *obj, Obj *objlist);
Bool ObjIn(Obj *obj1, Obj *obj2);
Bool ObjInDeep(Obj *obj1, Obj *obj2);
int ObjDepth(Obj *obj);
int ObjFindDescendantInList(Obj *obj, Obj *objlist);
Float WeightConcordance(Float w1, Float w2);
Float Weight01toNeg1Pos1(Float weight);
Float WeightNeg1Pos1to01(Float weight);
Float ObjWeight(Obj *obj);
Obj *ObjCopyWithoutWeight(Obj *obj);
Float ObjWeightConcordance(Obj *obj1, Obj *obj2);
void ObjWeightSet(Obj *obj, Float weight);
Float ObjWeightIncrement(Obj *obj, Float incr);
Float ObjModGetPropValue(Obj *prop);
void po(Obj *obj);
void pp(Obj *obj);
void pol(ObjList *objs);
void polol(ObjListList *objs);
void ObjPrintString(FILE *stream, Obj *obj);
void ObjPrintNumber(FILE *stream, Obj *obj);
void ObjPrint1(FILE *stream, Obj *obj, PNode *pn, int todepth, int show_tsr, int show_addr, int indicate_pn, int html);
void ObjPrint(FILE *stream, Obj *obj);
void ObjPrintT(FILE *stream, Obj *obj);
void ObjPrettyPrint1(FILE *stream, Obj *obj, PNode *pn, int column, int indent, int show_tsr, int show_addr, int indicate_pn, int html);
void ObjPrettyPrint(FILE *stream, Obj *obj);
void ObjPrintAncestors1(FILE *stream, Obj *obj, int depth, int maxdepth);
void ObjPrintDescendants1(FILE *stream, Obj *obj, int depth, int maxdepth);
void ObjSocketPrintString(Socket *skt, Obj *obj);
void ObjSocketPrintNumber(Socket *skt, Obj *obj);
void ObjSocketPrint(Socket *skt, Obj *obj);
void ObjTextPrintString(Text *text, Obj *obj);
void ObjTextPrintNumber(Text *text, Obj *obj);
void ObjTextPrint(Text *text, Obj *obj);
Obj *ObjRead(FILE *stream);
Obj *ObjReadString(char *s);
Obj *ObjEnterList(void);
Bd *BdCreate(void);
void BdFree(Bd *bd);
BdElem *BdElemCreate(Obj *var, Obj *val, BdElem *next);
Bd *BdCopy(Bd *bd);
Bd *BdCopyAppend(Bd *bd1, Bd *bd2);
Bd *BdAssign(Bd *bd, Obj *var, Obj *val);
Obj *BdLookup(Bd *bd, Obj *var);
void BdPrint(FILE *stream, Bd *bd);
Bool ObjMatchItem(Obj *ptn, Obj *obj);
Bool ObjMatchList(Obj *ptn, Obj *obj);
Bd *ObjUnify(Obj *obj1, Obj *obj2);
Bd *ObjUnify1(Obj *obj1, Obj *obj2, Bd *bd);
Obj *ObjVarToClass(Obj *var);
Obj *ObjClassToVar(Obj *class);
Bd *ObjUnifyVar(Obj *obj1, Obj *obj2, Bd *bd);
Bd *ObjUnify2(Obj *obj1, Obj *obj2, Bd *bd);
Bool ObjUnifyQuick(register Obj *ptn, register Obj *obj);
Obj *ObjInstan(Obj *obj, Bd *bd);
Obj *ObjSubst1(Obj *obj, Obj *from, Obj *to, PNode *to_pn, int *found);
Obj *ObjSubst(Obj *obj, Obj *from, Obj *to);
Obj *ObjSubstSimilar1(Obj *obj, Obj *from, Obj *to, int *found);
Obj *ObjSubstSimilar(Obj *obj, Obj *from, Obj *to);
Obj *ObjEliminateArticles(Obj *obj);
Obj *ObjSubstPNode(Obj *obj, Obj *from, Obj *to, PNode *pn_to);
ObjList *ObjListSubst(ObjList *objs, Obj *from, Obj *to);
Obj *ObjSubsts(Obj *from, ObjList *map, Grid *grid);
void ObjUnroll1(Obj *obj, ObjList **cons, ObjList **modcons);
ObjList *ObjUnroll(Obj *obj);
Obj *ObjModCreateProp(Obj *adj, Obj *noun, Obj *value);
Obj *ObjIntension(Obj *noun, ObjList *props);
ObjList *ObjListIntension(Obj *noun, ObjList *props, Float score, LexEntryToObj *leo, PNode *pn, ObjList *next);
Obj *ObjIntension1(Obj *noun, Obj *prop);
ObjList *ObjIntensionParse(Obj *obj, int article_ok, Obj **noun);
Obj *ObjAdverb(Obj *adverb, ObjList *cons);
Obj *ObjAdverb1(Obj *adverb, Obj *con);
Obj *ObjQuestionElement(Obj *class, Obj *interrogative, ObjList *props);
Bool ObjQuestionElementParse(Obj *obj, Obj **class, Obj **interrogative, ObjList **props);
Obj *ObjMakeAnd(Obj *obj1, Obj *obj2);
Obj *ObjMakeCoordConj(Obj *conj, Obj *obj1, Obj *obj2);
Obj *ObjMakeAndList(Obj *existing, Obj *new);
Obj *ObjListToPropObj(ObjList *objs, Obj *prop);
Obj *ObjListToAndObj(ObjList *objs);
Obj *ObjListToOrObj(ObjList *objs);
ObjList *PropObjToObjList(Obj *obj, Obj *prop);
ObjList *AndObjToObjList(Obj *obj);
ObjList *OrObjToObjList(Obj *obj);
Obj *ObjMakeTemporal(Obj *rel, Obj *obj1, Obj *obj2);
void ObjPrintQuery(FILE *stream, Obj *obj, int maxdepth);
void ObjQueryTool(void);
void ObjValidate(void);
void ov(void);
