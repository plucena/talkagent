// Proxy class generated by ozone's OPP ($Revision: 1.1 $).
// DO NOT EDIT!

package br.usp.talkagent.cm.db;

import org.ozoneDB.*;
import org.ozoneDB.core.ObjectID;
import org.ozoneDB.core.Lock;
import org.ozoneDB.core.ResultConverter;


/**
 * This class was automatically generated by ozone's OPP.
 * Do not instantiate or use this class directly.
 */
public final class CIndexImpl_Proxy 
       extends OzoneProxy
       implements br.usp.talkagent.cm.db.CIndex {

   static final long	serialVersionUID = 1L;

   public CIndexImpl_Proxy() {
      super();
      }


   public CIndexImpl_Proxy (ObjectID oid, OzoneInterface link) {
      super (oid, link);
      }


   public static br.usp.talkagent.cm.db.CIndex createObject(OzoneInterface link) {
      try {
         /*
            if (link == null)
               throw new TransactionExc ("Thread has not yet joined a transaction.");
         */
         
         Object[]   args  = {};
         OzoneProxy proxy = link.createObject ("br.usp.talkagent.cm.CIndexImpl", OzoneInterface.Public, null, "", args);
         
         return (br.usp.talkagent.cm.db.CIndex) proxy;
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw new UnexpectedException(e.toString());
      }
   }


   public void init_update() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            ((br.usp.talkagent.cm.db.CIndexImpl) target).init_update();
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 13, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void addComponent_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.cm.db.CIndexImpl) target).addComponent_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 0, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void removeComponent_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.cm.db.CIndexImpl) target).removeComponent_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 18, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.util.Vector getElements() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.cm.db.CIndexImpl) target).getElements());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 8, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public int getElementsNumber() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return ((br.usp.talkagent.cm.db.CIndexImpl) target).getElementsNumber();
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 9, args, Lock.LEVEL_READ);
            return ((Integer)result).intValue();
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getElement(int arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.cm.db.CIndexImpl) target).getElement(arg0));
         } else {
            Object[] args   = {new Integer(arg0)};
            Object   result = link.invoke(this, 7, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public boolean containsElement(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            return ((br.usp.talkagent.cm.db.CIndexImpl) target).containsElement(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 2, args, Lock.LEVEL_READ);
            return ((Boolean)result).booleanValue();
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public org.ozoneDB.core.ObjectID getObjectID() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (org.ozoneDB.core.ObjectID) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.cm.db.CIndexImpl) target).getObjectID());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 10, args, Lock.LEVEL_READ);
            return (org.ozoneDB.core.ObjectID) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }
   }
