// Proxy class generated by ozone's OPP ($Revision: 1.3 $).
// DO NOT EDIT!

package br.usp.talkagent.component;

import org.ozoneDB.*;
import org.ozoneDB.core.ObjectID;
import org.ozoneDB.core.Lock;
import org.ozoneDB.core.ResultConverter;

/**
 * This class was automatically generated by ozone's OPP.
 * Do not instantiate or use this class directly.
 */
public final class ComponentImpl_Proxy 
       extends OzoneProxy
       implements br.usp.talkagent.component.Component {

   static final long	serialVersionUID = 1L;

   public ComponentImpl_Proxy() {
      super();
      }


   public ComponentImpl_Proxy (ObjectID oid, OzoneInterface link) {
      super (oid, link);
      }


   public static br.usp.talkagent.component.Component createObject(OzoneInterface link) {
      try {
         /*
            if (link == null)
               throw new TransactionExc ("Thread has not yet joined a transaction.");
         */
         
         Object[]   args  = {};
         OzoneProxy proxy = link.createObject ("br.usp.talkagent.component.ComponentImpl", OzoneInterface.Public, null, "", args);
         
         return (br.usp.talkagent.component.Component) proxy;
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw new UnexpectedException(e.toString());
      }
   }


   public java.lang.String toString() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).toString());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 31, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.util.Vector getMethods() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getMethods());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 16, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public br.usp.talkagent.component.CMethod getMethod(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            return (br.usp.talkagent.component.CMethod) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getMethod(arg0));
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 15, args, Lock.LEVEL_READ);
            return (br.usp.talkagent.component.CMethod) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void execute(java.lang.String arg0, java.util.Vector arg1) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            arg1 = (java.util.Vector) ResultConverter.substituteOzoneCompatibles(arg1);
            ((br.usp.talkagent.component.ComponentImpl) target).execute(arg0, arg1);
         } else {
            Object[] args   = {arg0, arg1};
            Object   result = link.invoke(this, 9, args, Lock.LEVEL_READ);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setComponentInfo_update(br.usp.talkagent.component.CompLink arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (br.usp.talkagent.component.CompLink) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.component.ComponentImpl) target).setComponentInfo_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 27, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setComponentInfo_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.component.ComponentImpl) target).setComponentInfo_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 28, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getAncestor() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getAncestor());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 10, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getBeanName() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getBeanName());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 11, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setAncestor_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.component.ComponentImpl) target).setAncestor_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 25, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setBeanName_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.component.ComponentImpl) target).setBeanName_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 26, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void AssociateConceptToMethod_update(java.lang.String arg0, java.lang.String arg1) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            arg1 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg1);
            ((br.usp.talkagent.component.ComponentImpl) target).AssociateConceptToMethod_update(arg0, arg1);
         } else {
            Object[] args   = {arg0, arg1};
            Object   result = link.invoke(this, 0, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void DissociateConceptToMethod_update(java.lang.String arg0, java.lang.String arg1) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            arg1 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg1);
            ((br.usp.talkagent.component.ComponentImpl) target).DissociateConceptToMethod_update(arg0, arg1);
         } else {
            Object[] args   = {arg0, arg1};
            Object   result = link.invoke(this, 2, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void AssociateConceptToParam_update(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            arg1 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg1);
            arg2 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg2);
            ((br.usp.talkagent.component.ComponentImpl) target).AssociateConceptToParam_update(arg0, arg1, arg2);
         } else {
            Object[] args   = {arg0, arg1, arg2};
            Object   result = link.invoke(this, 1, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void DissociateConceptToParam_update(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            arg1 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg1);
            arg2 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg2);
            ((br.usp.talkagent.component.ComponentImpl) target).DissociateConceptToParam_update(arg0, arg1, arg2);
         } else {
            Object[] args   = {arg0, arg1, arg2};
            Object   result = link.invoke(this, 3, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public br.usp.talkagent.component.CompLink getComponentInfo() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (br.usp.talkagent.component.CompLink) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getComponentInfo());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 13, args, Lock.LEVEL_READ);
            return (br.usp.talkagent.component.CompLink) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getFileName() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getFileName());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 14, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setFileName_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.component.ComponentImpl) target).setFileName_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 30, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public org.ozoneDB.core.ObjectID getObjectID() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (org.ozoneDB.core.ObjectID) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.component.ComponentImpl) target).getObjectID());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 17, args, Lock.LEVEL_READ);
            return (org.ozoneDB.core.ObjectID) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }
   }
