// Proxy class generated by ozone's OPP ($Revision: 1.1 $).
// DO NOT EDIT!

package br.usp.talkagent.kb.objects;

import org.ozoneDB.*;
import org.ozoneDB.core.ObjectID;
import org.ozoneDB.core.Lock;
import org.ozoneDB.core.ResultConverter;

/**
 * This class was automatically generated by ozone's OPP.
 * Do not instantiate or use this class directly.
 */
public final class ozConceptImpl_Proxy 
       extends OzoneProxy
       implements br.usp.talkagent.kb.objects.ozConcept {

   static final long	serialVersionUID = 1L;

   public ozConceptImpl_Proxy() {
      super();
      }


   public ozConceptImpl_Proxy (ObjectID oid, OzoneInterface link) {
      super (oid, link);
      }


   public static br.usp.talkagent.kb.objects.ozConcept createObject(OzoneInterface link) {
      try {
         /*
            if (link == null)
               throw new TransactionExc ("Thread has not yet joined a transaction.");
         */
         
         Object[]   args  = {};
         OzoneProxy proxy = link.createObject ("br.usp.talkagent.kb.objects.ozConceptImpl", OzoneInterface.Public, null, "", args);
         
         return (br.usp.talkagent.kb.objects.ozConcept) proxy;
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw new UnexpectedException(e.toString());
      }
   }


   public static br.usp.talkagent.kb.objects.ozConcept createObject(java.lang.String arg0,OzoneInterface link) {
      try {
         /*
            if (link == null)
               throw new TransactionExc ("Thread has not yet joined a transaction.");
         */
         
         Object[]   args  = {arg0};
         OzoneProxy proxy = link.createObject ("br.usp.talkagent.kb.objects.ozConceptImpl", OzoneInterface.Public, null, "java.lang.String", args);
         
         return (br.usp.talkagent.kb.objects.ozConcept) proxy;
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw new UnexpectedException(e.toString());
      }
   }


   public java.util.Vector print() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).print());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 23, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setParent_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setParent_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 33, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getParentID() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getParentID());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 16, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.util.Vector getAssertions() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getAssertions());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 7, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void addAssertion_update(br.usp.talkagent.kb.Assertion arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (br.usp.talkagent.kb.Assertion) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).addAssertion_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 0, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setAssetions_update(java.util.Vector arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.util.Vector) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setAssetions_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 26, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public int getNumberOfAssertions() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return ((br.usp.talkagent.kb.objects.ozConceptImpl) target).getNumberOfAssertions();
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 12, args, Lock.LEVEL_READ);
            return ((Integer)result).intValue();
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.util.Vector getChildrenVector() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getChildrenVector());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 8, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void addChild_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).addChild_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 1, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.lang.String getID() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.lang.String) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getID());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 11, args, Lock.LEVEL_READ);
            return (java.lang.String) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setID_update(java.lang.String arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.lang.String) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setID_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 30, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public int getNumberOfChildren() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return ((br.usp.talkagent.kb.objects.ozConceptImpl) target).getNumberOfChildren();
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 13, args, Lock.LEVEL_READ);
            return ((Integer)result).intValue();
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public int getNumberOfDirectChildren() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return ((br.usp.talkagent.kb.objects.ozConceptImpl) target).getNumberOfDirectChildren();
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 14, args, Lock.LEVEL_READ);
            return ((Integer)result).intValue();
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setNumberOfChildren_update(int arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setNumberOfChildren_update(arg0);
         } else {
            Object[] args   = {new Integer(arg0)};
            Object   result = link.invoke(this, 31, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setNumberOfDirectChildren_update(int arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setNumberOfDirectChildren_update(arg0);
         } else {
            Object[] args   = {new Integer(arg0)};
            Object   result = link.invoke(this, 32, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setChildren_update(java.util.Vector arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.util.Vector) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setChildren_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 27, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void addComponentLink_update(br.usp.talkagent.component.CElement arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (br.usp.talkagent.component.CElement) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).addComponentLink_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 2, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public java.util.Vector getComponetLinks() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (java.util.Vector) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getComponetLinks());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 10, args, Lock.LEVEL_READ);
            return (java.util.Vector) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void setCompontLinks_update(java.util.Vector arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_WRITE);

         if (target!=null) {
            arg0 = (java.util.Vector) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).setCompontLinks_update(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 28, args, Lock.LEVEL_WRITE);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public void removeCompLink(br.usp.talkagent.component.CElement arg0) {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            arg0 = (br.usp.talkagent.component.CElement) ResultConverter.substituteOzoneCompatibles(arg0);
            ((br.usp.talkagent.kb.objects.ozConceptImpl) target).removeCompLink(arg0);
         } else {
            Object[] args   = {arg0};
            Object   result = link.invoke(this, 24, args, Lock.LEVEL_READ);
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }


   public org.ozoneDB.core.ObjectID getObjectID() {
      try {
         Object target = link.fetch (this, Lock.LEVEL_READ);

         if (target!=null) {
            return (org.ozoneDB.core.ObjectID) ResultConverter.substituteOzoneCompatibles(((br.usp.talkagent.kb.objects.ozConceptImpl) target).getObjectID());
         } else {
            Object[] args   = {};
            Object   result = link.invoke(this, 15, args, Lock.LEVEL_READ);
            return (org.ozoneDB.core.ObjectID) result;
         }
      } catch (ExceptionInOzoneObjectException e) {
         Throwable ee = e.getCause();
         
         // Hope that the compiler is not so smart and detect these statements as unreachable if these exceptions are already matched above
         if (ee instanceof RuntimeException) {
             throw (RuntimeException) ee;
         }
         
         if (ee instanceof Error) {
             throw (Error) ee;
         }
         
         throw e; // Unhandled exception.
      } catch (RuntimeException e) {
         e.fillInStackTrace();
         throw e;
      } catch (Exception e) {
         e.fillInStackTrace();
         throw new UnexpectedException (e.toString());
      }
   }
   }
